service: rustika-api
frameworkVersion: '3'

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        functionName: testAuthorizer

functions:
########------------------------------Authorizer---------------------------- ###########
  testAuthorizer:
    handler: src/controllers/Authorization/authorizer.authorizer
#######---------------------------------Loging------------------------------ ##########
  login:
    handler: src/controllers/Authorization/loginController.login
    events:
      - httpApi:
          path: /login
          method: post
#######---------------------------------Users------------------------------ ##########
  createUser:
    handler: src/controllers/User/createUser.createUser
    events:
      - httpApi:
          path: /user
          method: post
  deleteUser:
    handler: src/controllers/User/deleteUser.deleteUser
    events:
      - httpApi:
          path: /user
          method: delete
########--------------------------------Platos------------------------------ ###########
  getDishes:
    handler: src/controllers/Platos/getDishes.getDishes
    events:
      - httpApi:
          path: /platos
          method: get
  getDish:
    handler: src/controllers/Platos/getDish.getDish
    events:
      - httpApi:
          path: /platos/{id}
          method: get
  createDish:
    handler: src/controllers/Platos/postDish.createDish
    events:
      - httpApi:
          path: /platos
          method: post
  updateDish:
    handler: src/controllers/Platos/putDish.updateDish
    events:
      - httpApi:
          path: /platos/{id}
          method: put
  deleteDish:
    handler: src/controllers/Platos/deleteDish.deleteDish
    events: 
      - httpApi:
          path: /platos/{id}
          method: delete
########--------------------------------Bebidas------------------------------ ###########
  getDrinks:
    handler: src/controllers/Bebidas/getDrinks.getDrinks
    events:
      - httpApi:
          path: /bebidas
          method: get
  getDrink:
    handler: src/controllers/Bebidas/getDrink.getDrink
    events:
      - httpApi:
          path: /bebidas/{id}
          method: get
  createDrink:
    handler: src/controllers/Bebidas/postDrink.createDrink
    events:
      - httpApi:
          path: /bebidas
          method: post
  updateDrink:
    handler: src/controllers/Bebidas/putDrink.updateDrink
    events:
      - httpApi:
          path: /bebidas/{id}
          method: put
  deleteDrink:
    handler: src/controllers/Bebidas/deleteDrink.deleteDrink
    events:
      - httpApi:
          path: /bebidas/{id}
          method: delete
########--------------------------------Ofertas------------------------------ ###########
  getOfertas:
    handler: src/controllers/OfertasEspeciales/getOfertasController.getOfertas
    events:
      - httpApi:
          path: /ofertas
          method: get
  postOfertas:
    handler: src/controllers/OfertasEspeciales/postOfertasController.postOfertas
    events:
      - httpApi:
          path: /ofertas
          method: post
  putOfertas:
    handler: src/controllers/OfertasEspeciales/putOfertasController.putOfertas
    events:
      - httpApi:
          path: /ofertas
          method: put
  deleteOfertas:
    handler: src/controllers/OfertasEspeciales/deleteOfertasController.deleteOfertas
    events:
      - httpApi:
          path: /ofertas
          method: delete
########--------------------------------Descuentos------------------------------ ###########
  getDescuentos:
    handler: src/controllers/Descuentos/getDescuentosController.getDescuentos
    events:
      - httpApi:
          path: /descuentos
          method: get
  postDescuentos:
    handler: src/controllers/Descuentos/postDescuentosController.postDescuentos
    events:
      - httpApi:
          path: /descuentos
          method: post
  putDescuentos:
    handler: src/controllers/Descuentos/putDescuentosController.putDescuentos
    events:
      - httpApi:
          path: /descuentos
          method: put
  deleteDescuentos:
    handler: src/controllers/Descuentos/deleteDescuentosController.deleteDescuentos
    events:
      - httpApi:
          path: /descuentos
          method: delete
########--------------------------------Testing------------------------------ ###########
  postImages:
    handler: src/controllers/uploadTest.postTestImage
    events:
      - httpApi:
          path: /test
          method: post
          authorizer:
            name: customAuthorizer
########--------------------------------Reservas------------------------------ ###########
  getReservation:
    handler: src/controllers/Reservaciones/getReservaController.getReservation
    events:
      - httpApi:
          path: /reservas
          method: get
  postReservation:
    handler: src/controllers/Reservaciones/postReservaController.postReservation
    events:
      - httpApi:
          path: /reservas
          method: post
  putReservation:
    handler: src/controllers/Reservaciones/putReservaController.putReservation
    events:
      - httpApi:
          path: /reservas
          method: put
  deleteReservation:
    handler: src/controllers/Reservaciones/deleteReservaController.deleteReservation
    events:
      - httpApi:
          path: /reservas
          method: delete
########--------------------------------Temporada------------------------------ ###########
  getSeasons:
    handler: src/controllers/Temporada/getSeasons.getHighSeasons
    events:
      - httpApi:
          path: /temporada
          method: get
  postSeason:
    handler: src/controllers/Temporada/postSeason.postHighSeason
    events:
      - httpApi:
          path: /temporada
          method: post
  updateSeason:
    handler: src/controllers/Temporada/putSeason.updateSeason
    events:
      - httpApi:
          path: /temporada/{id}
          method: put
  deleteSeason:
    handler: src/controllers/Temporada/deleteSeason.deleteSeason
    events:
      - httpApi:
          path: /temporada/{id}
          method: delete
########--------------------------------TimeBased------------------------------ ###########
  filterDates:
    handler: src/controllers/TimeBasedControllers/expiredDates.filterExpiredDates
    events:
      - schedule: cron(5 5 * * ? *)
  activeDiscounts:
    handler: src/controllers/TimeBasedControllers/activateDiscounts.activate
    events:
      - schedule: cron(0 5 * * ? *)
  deactiveDiscounts:
    handler: src/controllers/TimeBasedControllers/deactivateDiscounts.deactivate
    events:
      - schedule: cron(0 5 * * ? *)